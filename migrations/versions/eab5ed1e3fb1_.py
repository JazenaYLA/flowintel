"""empty message

Revision ID: eab5ed1e3fb1
Revises: 379f06ac1035
Create Date: 2025-10-09 11:33:45.618682

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'eab5ed1e3fb1'
down_revision = '379f06ac1035'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    tables = inspector.get_table_names()
    misp__attribute__instance__uuid = [col['name'] for col in inspector.get_columns('misp__attribute__instance__uuid')]
    misp__object__instance__uuid = [col['name'] for col in inspector.get_columns('misp__object__instance__uuid')]

    if 'flask_sessions' in tables:
        op.drop_table('flask_sessions')

    if "case_id" not in misp__attribute__instance__uuid:
        with op.batch_alter_table('misp__attribute__instance__uuid', schema=None) as batch_op:
            batch_op.add_column(sa.Column('case_id', sa.Integer(), nullable=True))
            batch_op.create_index(batch_op.f('ix_misp__attribute__instance__uuid_case_id'), ['case_id'], unique=False)

    if "case_id" not in misp__object__instance__uuid:
        with op.batch_alter_table('misp__object__instance__uuid', schema=None) as batch_op:
            batch_op.add_column(sa.Column('case_id', sa.Integer(), nullable=True))
            batch_op.create_index(batch_op.f('ix_misp__object__instance__uuid_case_id'), ['case_id'], unique=False)

        misp_obj_uuid_db = conn.execute(sa.text("SELECT id, misp_object_id FROM misp__object__instance__uuid")).fetchall()

        for misp_obj_uuid in misp_obj_uuid_db:
            misp_obj = conn.execute(sa.text(f"SELECT case_id, id FROM case__misp__object WHERE case__misp__object.id={misp_obj_uuid.misp_object_id}")).first()
            if misp_obj:
                conn.execute(
					sa.text(f"UPDATE misp__object__instance__uuid SET case_id = {misp_obj.case_id} WHERE id = {misp_obj_uuid.id}")
				)

                misp_attr_db = conn.execute(sa.text(f"SELECT id FROM misp__attribute WHERE case_misp_object_id = {misp_obj.id}")).fetchall()

                for attr in misp_attr_db:
                    conn.execute(
                        sa.text(f"UPDATE misp__attribute__instance__uuid SET case_id = {misp_obj.case_id} WHERE misp_attribute_id = {attr.id}")
                    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    tables = inspector.get_table_names()
    misp__attribute__instance__uuid = [col['name'] for col in inspector.get_columns('misp__attribute__instance__uuid')]
    misp__object__instance__uuid = [col['name'] for col in inspector.get_columns('misp__object__instance__uuid')]

    if "case_id" in misp__object__instance__uuid:
        with op.batch_alter_table('misp__object__instance__uuid', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_misp__object__instance__uuid_case_id'))
            batch_op.drop_column('case_id')

    if "case_id" in misp__attribute__instance__uuid:
        with op.batch_alter_table('misp__attribute__instance__uuid', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_misp__attribute__instance__uuid_case_id'))
            batch_op.drop_column('case_id')

    if 'flask_sessions' not in tables:
        op.create_table('flask_sessions',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('session_id', sa.VARCHAR(length=255), nullable=True),
        sa.Column('data', sa.BLOB(), nullable=True),
        sa.Column('expiry', sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('session_id')
        )
    # ### end Alembic commands ###
