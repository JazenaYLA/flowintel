"""empty message

Revision ID: b517c582523f
Revises: 8626dbc8e984
Create Date: 2024-09-25 11:39:24.206964

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = 'b517c582523f'
down_revision = '8626dbc8e984'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = inspect(bind)
    existing_tables = inspector.get_table_names()
    
    # Drop case__template__connector__instance table if it exists
    if 'case__template__connector__instance' in existing_tables:
        try:
            op.drop_index('ix_case__template__connector__instance_instance_id', 'case__template__connector__instance')
        except:
            pass
        try:
            op.drop_index('ix_case__template__connector__instance_template_id', 'case__template__connector__instance')
        except:
            pass
        op.drop_table('case__template__connector__instance')

    # Drop _alembic_tmp_case__misp__object table if it exists
    if '_alembic_tmp_case__misp__object' in existing_tables:
        op.drop_table('_alembic_tmp_case__misp__object')

    # Drop task__template__connector__instance table if it exists
    if 'task__template__connector__instance' in existing_tables:
        try:
            op.drop_index('ix_task__template__connector__instance_instance_id', 'task__template__connector__instance')
        except:
            pass
        try:
            op.drop_index('ix_task__template__connector__instance_template_id', 'task__template__connector__instance')
        except:
            pass
        op.drop_table('task__template__connector__instance')

    # Drop _alembic_tmp_task table if it exists
    if '_alembic_tmp_task' in existing_tables:
        op.drop_table('_alembic_tmp_task')
    
    with op.batch_alter_table('case__misp__object', schema=None) as batch_op:
        batch_op.alter_column('case_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('case__misp__object', schema=None) as batch_op:
        batch_op.alter_column('case_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    bind = op.get_bind()
    inspector = inspect(bind)
    existing_tables = inspector.get_table_names()
    
    if '_alembic_tmp_task' not in existing_tables:
        op.create_table('_alembic_tmp_task',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('uuid', sa.VARCHAR(length=36), nullable=True),
        sa.Column('title', sa.VARCHAR(), nullable=True),
        sa.Column('description', sa.VARCHAR(), nullable=True),
        sa.Column('url', sa.VARCHAR(), nullable=True),
        sa.Column('creation_date', sa.DATETIME(), nullable=True),
        sa.Column('deadline', sa.DATETIME(), nullable=True),
        sa.Column('last_modif', sa.DATETIME(), nullable=True),
        sa.Column('finish_date', sa.DATETIME(), nullable=True),
        sa.Column('case_id', sa.INTEGER(), nullable=True),
        sa.Column('status_id', sa.INTEGER(), nullable=True),
        sa.Column('completed', sa.BOOLEAN(), nullable=True),
        sa.Column('notif_deadline_id', sa.INTEGER(), nullable=True),
        sa.Column('case_order_id', sa.INTEGER(), nullable=True),
        sa.Column('nb_notes', sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(['case_id'], ['case.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
        )

    if 'task__template__connector__instance' not in existing_tables:
        op.create_table('task__template__connector__instance',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('template_id', sa.INTEGER(), nullable=True),
        sa.Column('instance_id', sa.INTEGER(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
    
    if 'task__template__connector__instance' in existing_tables:
        task_template_indexes = [idx['name'] for idx in inspector.get_indexes('task__template__connector__instance')]
        if 'ix_task__template__connector__instance_template_id' not in task_template_indexes:
            op.create_index('ix_task__template__connector__instance_template_id', 'task__template__connector__instance', ['template_id'], unique=False)
        if 'ix_task__template__connector__instance_instance_id' not in task_template_indexes:
            op.create_index('ix_task__template__connector__instance_instance_id', 'task__template__connector__instance', ['instance_id'], unique=False)

    if '_alembic_tmp_case__misp__object' not in existing_tables:
        op.create_table('_alembic_tmp_case__misp__object',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('case_id', sa.INTEGER(), nullable=True),
        sa.Column('template_uuid', sa.VARCHAR(length=36), nullable=True),
        sa.Column('name', sa.VARCHAR(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )

    if 'case__template__connector__instance' not in existing_tables:
        op.create_table('case__template__connector__instance',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('template_id', sa.INTEGER(), nullable=True),
        sa.Column('instance_id', sa.INTEGER(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )

    if 'case__template__connector__instance' in existing_tables:
        case_template_indexes = [idx['name'] for idx in inspector.get_indexes('case__template__connector__instance')]
        if 'ix_case__template__connector__instance_template_id' not in case_template_indexes:
            op.create_index('ix_case__template__connector__instance_template_id', 'case__template__connector__instance', ['template_id'], unique=False)
        if 'ix_case__template__connector__instance_instance_id' not in case_template_indexes:
            op.create_index('ix_case__template__connector__instance_instance_id', 'case__template__connector__instance', ['instance_id'], unique=False)

    # ### end Alembic commands ###
