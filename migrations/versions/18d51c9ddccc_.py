"""empty message

Revision ID: 18d51c9ddccc
Revises: 77984d64c89e
Create Date: 2025-03-19 16:03:09.309580

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = '18d51c9ddccc'
down_revision = '77984d64c89e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        op.create_table('task__url__tool',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('task_id', sa.Integer(), nullable=True),
            sa.Column('url_tool', sa.String(), nullable=True),
            sa.ForeignKeyConstraint(['task_id'], ['task.id'], ondelete='CASCADE'),
            sa.PrimaryKeyConstraint('id')
        )
    except OperationalError:
        print("Table 'task__url__tool' already exist")

    try:
        with op.batch_alter_table('task__url__tool', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_task__url__tool_url_tool'), ['url_tool'], unique=False)
    except OperationalError:
        print("Index 'ix_task__url__tool_url_tool' already exist")


    connection = op.get_bind()

    tasks = connection.execute(sa.text("SELECT * FROM 'task'")).fetchall()
    for task_ in tasks:
        if task_.url == None:
            loc_url = sa.null()
        else:
            loc_url = task_.url
        connection.execute(
            sa.text(f"Insert into task__url__tool (task_id, url_tool) values({task_.id},{loc_url})")
        )

    try:
        with op.batch_alter_table('task', schema=None) as batch_op:
            batch_op.drop_index('ix_task_url')
            batch_op.drop_column('url')
    except OperationalError:
        print("column 'url' already dropped from Task")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        with op.batch_alter_table('task', schema=None) as batch_op:
            batch_op.add_column(sa.Column('url', sa.VARCHAR(), nullable=True))
            batch_op.create_index('ix_task_url', ['url'], unique=False)
    except OperationalError:
        print("column 'url' already created for Task")

    connection = op.get_bind()

    tasks_url_tool = connection.execute(sa.text("SELECT * FROM 'task__url__tool'")).fetchall()
    for task_ in tasks_url_tool:
        if task_.url_tool == None:
            loc_url = sa.null()
        else:
            loc_url = task_.url_tool
        connection.execute(
            sa.text(f"Insert into task (url) values({loc_url})")
        )

    try:
        with op.batch_alter_table('task__url__tool', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_task__url__tool_url_tool'))
    except OperationalError:
        print("Index 'ix_task__url__tool_url_tool' already dropped")

    try:
        op.drop_table('task__url__tool')
    except OperationalError:
        print("Table 'task__url__tool' already dropped")
    # ### end Alembic commands ###
