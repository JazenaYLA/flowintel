"""empty message

Revision ID: 622a2ad64973
Revises: 93068451b88b
Create Date: 2025-04-24 14:40:54.029929

"""
import datetime
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = '622a2ad64973'
down_revision = '93068451b88b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Obtenir l'inspecteur pour vérifier l'existence des tables et colonnes
    conn = op.get_bind()
    inspector = inspect(conn)
    existing_tables = inspector.get_table_names()
    
    # Ajouter des colonnes à case__misp__object si elles n'existent pas
    if 'case__misp__object' in existing_tables:
        columns = [col['name'] for col in inspector.get_columns('case__misp__object')]
        if 'creation_date' not in columns:
            op.add_column('case__misp__object', sa.Column('creation_date', sa.DateTime(), nullable=True, server_default=str(datetime.datetime.now(tz=datetime.timezone.utc))))
            op.create_index('ix_case__misp__object_creation_date', 'case__misp__object', ['creation_date'])
            print("Added creation_date column to case__misp__object")
        else:
            print("Column creation_date already exists in case__misp__object")
            
        if 'last_modif' not in columns:
            op.add_column('case__misp__object', sa.Column('last_modif', sa.DateTime(), nullable=True, server_default=str(datetime.datetime.now(tz=datetime.timezone.utc))))
            op.create_index('ix_case__misp__object_last_modif', 'case__misp__object', ['last_modif'])
            print("Added last_modif column to case__misp__object")
        else:
            print("Column last_modif already exists in case__misp__object")
    else:
        print("Table case__misp__object does not exist")

    # Ajouter des colonnes à misp__attribute si elles n'existent pas
    if 'misp__attribute' in existing_tables:
        columns = [col['name'] for col in inspector.get_columns('misp__attribute')]
        if 'creation_date' not in columns:
            op.add_column('misp__attribute', sa.Column('creation_date', sa.DateTime(), nullable=True, server_default=str(datetime.datetime.now(tz=datetime.timezone.utc))))
            op.create_index('ix_misp__attribute_creation_date', 'misp__attribute', ['creation_date'])
            print("Added creation_date column to misp__attribute")
        else:
            print("Column creation_date already exists in misp__attribute")
            
        if 'last_modif' not in columns:
            op.add_column('misp__attribute', sa.Column('last_modif', sa.DateTime(), nullable=True, server_default=str(datetime.datetime.now(tz=datetime.timezone.utc))))
            op.create_index('ix_misp__attribute_last_modif', 'misp__attribute', ['last_modif'])
            print("Added last_modif column to misp__attribute")
        else:
            print("Column last_modif already exists in misp__attribute")
    else:
        print("Table misp__attribute does not exist")

    # Ajouter une colonne à user si elle n'existe pas
    if 'user' in existing_tables:
        columns = [col['name'] for col in inspector.get_columns('user')]
        if 'creation_date' not in columns:
            op.add_column('user', sa.Column('creation_date', sa.DateTime(), nullable=True, server_default=str(datetime.datetime.now(tz=datetime.timezone.utc))))
            op.create_index('ix_user_creation_date', 'user', ['creation_date'])
            print("Added creation_date column to user")
        else:
            print("Column creation_date already exists in user")
    else:
        print("Table user does not exist")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = inspect(conn)
    existing_tables = inspector.get_table_names()
    
    # Drop user columns
    if 'user' in existing_tables:
        user_columns = [col['name'] for col in inspector.get_columns('user')]
        user_indexes = [idx['name'] for idx in inspector.get_indexes('user')]
        if 'ix_user_creation_date' in user_indexes:
            op.drop_index('ix_user_creation_date', table_name='user')
        if 'creation_date' in user_columns:
            op.drop_column('user', 'creation_date')

    # Drop misp__attribute columns
    if 'misp__attribute' in existing_tables:
        misp_attr_columns = [col['name'] for col in inspector.get_columns('misp__attribute')]
        misp_attr_indexes = [idx['name'] for idx in inspector.get_indexes('misp__attribute')]
        if 'ix_misp__attribute_last_modif' in misp_attr_indexes:
            op.drop_index('ix_misp__attribute_last_modif', table_name='misp__attribute')
        if 'ix_misp__attribute_creation_date' in misp_attr_indexes:
            op.drop_index('ix_misp__attribute_creation_date', table_name='misp__attribute')
        if 'last_modif' in misp_attr_columns:
            op.drop_column('misp__attribute', 'last_modif')
        if 'creation_date' in misp_attr_columns:
            op.drop_column('misp__attribute', 'creation_date')

    # Drop case__misp__object columns
    if 'case__misp__object' in existing_tables:
        case_misp_columns = [col['name'] for col in inspector.get_columns('case__misp__object')]
        case_misp_indexes = [idx['name'] for idx in inspector.get_indexes('case__misp__object')]
        if 'ix_case__misp__object_last_modif' in case_misp_indexes:
            op.drop_index('ix_case__misp__object_last_modif', table_name='case__misp__object')
        if 'ix_case__misp__object_creation_date' in case_misp_indexes:
            op.drop_index('ix_case__misp__object_creation_date', table_name='case__misp__object')
        if 'last_modif' in case_misp_columns:
            op.drop_column('case__misp__object', 'last_modif')
        if 'creation_date' in case_misp_columns:
            op.drop_column('case__misp__object', 'creation_date')

    # ### end Alembic commands ###
