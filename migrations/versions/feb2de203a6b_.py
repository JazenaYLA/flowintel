"""empty message

Revision ID: feb2de203a6b
Revises: 2418fe20d609
Create Date: 2023-12-01 09:25:52.948536

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = 'feb2de203a6b'
down_revision = '2418fe20d609'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Obtenir l'inspecteur pour vérifier l'existence des tables et colonnes
    conn = op.get_bind()
    inspector = inspect(conn)
    existing_tables = inspector.get_table_names()
    
    # Créer task__connector si elle n'existe pas
    if 'task__connector' not in existing_tables:
        op.create_table('task__connector',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('task_id', sa.Integer(), nullable=True),
        sa.Column('connector_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_task__connector_connector_id', 'task__connector', ['connector_id'])
        op.create_index('ix_task__connector_task_id', 'task__connector', ['task_id'])
        print("Table task__connector created with indexes")
    else:
        print("Table task__connector already exists")

    # Ajouter colonne uuid à connector si elle n'existe pas
    if 'connector' in existing_tables:
        columns = [col['name'] for col in inspector.get_columns('connector')]
        if 'uuid' not in columns:
            op.add_column('connector', sa.Column('uuid', sa.String(length=36), nullable=True))
            op.create_index('ix_connector_uuid', 'connector', ['uuid'])
            print("Added uuid column to connector")
        else:
            print("Column uuid already exists in connector")
    else:
        print("Table connector does not exist")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('connector', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_connector_uuid'))
        batch_op.drop_column('uuid')

    with op.batch_alter_table('task__connector', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task__connector_task_id'))
        batch_op.drop_index(batch_op.f('ix_task__connector_connector_id'))

    op.drop_table('task__connector')
    # ### end Alembic commands ###
