"""empty message

Revision ID: b34064d1a92c
Revises: b0768fec36b7
Create Date: 2024-09-10 11:06:28.378991

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = 'b34064d1a92c'
down_revision = 'b0768fec36b7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        op.create_table('case__misp__object',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('case_id', sa.Integer(), nullable=False),
        sa.Column('template_uuid', sa.String(length=36), nullable=True),
        sa.Column('name', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        with op.batch_alter_table('case__misp__object', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_case__misp__object_case_id'), ['case_id'], unique=False)
            batch_op.create_index(batch_op.f('ix_case__misp__object_template_uuid'), ['template_uuid'], unique=False)
    except OperationalError:
        print("Table 'case__misp__object' already exist")

    try:
        op.create_table('case__misp__object__connector__instance',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('case_id', sa.Integer(), nullable=True),
        sa.Column('instance_id', sa.Integer(), nullable=True),
        sa.Column('identifier', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        with op.batch_alter_table('case__misp__object__connector__instance', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_case__misp__object__connector__instance_case_id'), ['case_id'], unique=False)
            batch_op.create_index(batch_op.f('ix_case__misp__object__connector__instance_instance_id'), ['instance_id'], unique=False)
    except OperationalError:
        print("Table 'case__misp__object__connector__instance' already exist")

    try:
        op.create_table('misp__attribute',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('case_misp_object_id', sa.Integer(), nullable=True),
        sa.Column('value', sa.String(), nullable=True),
        sa.Column('type', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['case_misp_object_id'], ['case__misp__object.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
        )
        with op.batch_alter_table('misp__attribute', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_misp__attribute_type'), ['type'], unique=False)
            batch_op.create_index(batch_op.f('ix_misp__attribute_value'), ['value'], unique=False)
    except OperationalError:
        print("Table 'misp__attribute' already exist")

    try:
        op.create_table('misp__object__instance__uuid',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('instance_id', sa.Integer(), nullable=True),
        sa.Column('misp_object_id', sa.Integer(), nullable=True),
        sa.Column('object_instance_uuid', sa.String(length=36), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        with op.batch_alter_table('misp__object__instance__uuid', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_misp__object__instance__uuid_instance_id'), ['instance_id'], unique=False)
            batch_op.create_index(batch_op.f('ix_misp__object__instance__uuid_misp_object_id'), ['misp_object_id'], unique=False)
            batch_op.create_index(batch_op.f('ix_misp__object__instance__uuid_object_instance_uuid'), ['object_instance_uuid'], unique=False)
    except OperationalError:
        print("Table 'misp__object__instance__uuid' already exist")

    try:
        op.create_table('misp__attribute__instance__uuid',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('instance_id', sa.Integer(), nullable=True),
        sa.Column('misp_attribute_id', sa.Integer(), nullable=True),
        sa.Column('attribute_instance_uuid', sa.String(length=36), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        with op.batch_alter_table('misp__attribute__instance__uuid', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_misp__attribute__instance__uuid_instance_id'), ['instance_id'], unique=False)
            batch_op.create_index(batch_op.f('ix_misp__attribute__instance__uuid_misp_attribute_id'), ['misp_attribute_id'], unique=False)
            batch_op.create_index(batch_op.f('ix_misp__attribute__instance__uuid_attribute_instance_uuid'), ['attribute_instance_uuid'], unique=False)
    except OperationalError:
        print("Table 'misp__attribute__instance__uuid' already exist")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        with op.batch_alter_table('misp__attribute', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_misp__attribute_value'))
            batch_op.drop_index(batch_op.f('ix_misp__attribute_type'))
    except OperationalError:
        print("Index Already dropped")

    try:
        op.drop_table('misp__attribute')
        with op.batch_alter_table('case__misp__object__connector__instance', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_case__misp__object__connector__instance_instance_id'))
    except OperationalError:
        print("Index Already dropped")

    try:
        op.drop_table('case__misp__object__connector__instance')
        with op.batch_alter_table('case__misp__object', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_case__misp__object_template_uuid'))
            batch_op.drop_index(batch_op.f('ix_case__misp__object_case_id'))
    except OperationalError:
        print("Index Already dropped")

    op.drop_table('case__misp__object')
    
    try:
        with op.batch_alter_table('misp__object__instance__uuid', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_misp__attribute__instance__uuid_instance_id'))
            batch_op.drop_index(batch_op.f('ix_misp__object__instance__uuid_misp_object_id'))
            batch_op.drop_index(batch_op.f('ix_misp__object__instance__uuid_object_instance_uuid'))
        op.drop_table('misp__object__instance__uuid')
    except OperationalError:
        print("Index Already dropped")

    try:
        with op.batch_alter_table('misp__attribute__instance__uuid', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_misp__attribute__instance__uuid_instance_id'))
            batch_op.drop_index(batch_op.f('ix_misp__attribute__instance__uuid_misp_attribute_id'))
            batch_op.drop_index(batch_op.f('ix_misp__attribute__instance__uuid_attribute_instance_uuid'))
        op.drop_table('misp__object__instance__uuid')
    except OperationalError:
        print("Index Already dropped")
    # ### end Alembic commands ###
