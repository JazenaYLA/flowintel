"""empty message

Revision ID: 8626dbc8e984
Revises: b34064d1a92c
Create Date: 2024-09-20 10:19:06.412106

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = '8626dbc8e984'
down_revision = 'b34064d1a92c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = inspect(bind)
    
    # Handle case table index
    case_indexes = [idx['name'] for idx in inspector.get_indexes('case')]
    if 'ix_case_title' in case_indexes:
        op.drop_index('ix_case_title', table_name='case')

    # Handle case__misp__object
    case_misp_object_columns = [col for col in inspector.get_columns('case__misp__object')]
    for col in case_misp_object_columns:
        if col['name'] == 'case_id' and not col['nullable']:
            op.alter_column('case__misp__object', 'case_id',
                existing_type=sa.INTEGER(),
                nullable=True)
            break

    # Handle misp__attribute__instance__uuid indexes
    misp_attr_indexes = [idx['name'] for idx in inspector.get_indexes('misp__attribute__instance__uuid')]
    if 'ix_misp__attribute__instance__uuid_attribute_instance_uuid' not in misp_attr_indexes:
        op.create_index('ix_misp__attribute__instance__uuid_attribute_instance_uuid', 'misp__attribute__instance__uuid', ['attribute_instance_uuid'], unique=False)
    if 'ix_misp__attribute__instance__uuid_instance_id' not in misp_attr_indexes:
        op.create_index('ix_misp__attribute__instance__uuid_instance_id', 'misp__attribute__instance__uuid', ['instance_id'], unique=False)
    if 'ix_misp__attribute__instance__uuid_misp_attribute_id' not in misp_attr_indexes:
        op.create_index('ix_misp__attribute__instance__uuid_misp_attribute_id', 'misp__attribute__instance__uuid', ['misp_attribute_id'], unique=False)

    # Handle task table
    task_indexes = [idx['name'] for idx in inspector.get_indexes('task')]
    if 'ix_task_title' in task_indexes:
        op.drop_index('ix_task_title', table_name='task')
    
    task_columns = [col for col in inspector.get_columns('task')]
    for col in task_columns:
        if col['name'] == 'title' and str(col['type']) == 'VARCHAR(64)':
            op.alter_column('task', 'title', existing_type=sa.String(length=64), type_=sa.String())
            break
    for col in task_columns:
        if col['name'] == 'url' and str(col['type']) == 'VARCHAR(64)':
            op.alter_column('task', 'url', existing_type=sa.String(length=64), type_=sa.String())
            break
    
    # Handle case table column
    case_columns = [col for col in inspector.get_columns('case')]
    for col in case_columns:
        if col['name'] == 'title' and str(col['type']) == 'VARCHAR(64)':
            op.alter_column('case', 'title', existing_type=sa.String(length=64), type_=sa.String())
            break

    # Handle case__template table
    case_template_columns = [col for col in inspector.get_columns('case__template')]
    for col in case_template_columns:
        if col['name'] == 'title' and str(col['type']) == 'VARCHAR(64)':
            op.alter_column('case__template', 'title', existing_type=sa.String(length=64), type_=sa.String())
            break

    # Handle task__template table
    task_template_columns = [col for col in inspector.get_columns('task__template')]
    for col in task_template_columns:
        if col['name'] == 'title' and str(col['type']) == 'VARCHAR(64)':
            op.alter_column('task__template', 'title', existing_type=sa.String(length=64), type_=sa.String())
            break
    for col in task_template_columns:
        if col['name'] == 'url' and str(col['type']) == 'VARCHAR(64)':
            op.alter_column('task__template', 'url', existing_type=sa.String(length=64), type_=sa.String())
            break
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = inspect(bind)
    
    # Re-create task index
    task_indexes = [idx['name'] for idx in inspector.get_indexes('task')]
    if 'ix_task_title' not in task_indexes:
        op.create_index('ix_task_title', 'task', ['title'], unique=False)

    # Drop misp__attribute__instance__uuid indexes
    misp_attr_indexes = [idx['name'] for idx in inspector.get_indexes('misp__attribute__instance__uuid')]
    if 'ix_misp__attribute__instance__uuid_misp_attribute_id' in misp_attr_indexes:
        op.drop_index('ix_misp__attribute__instance__uuid_misp_attribute_id', table_name='misp__attribute__instance__uuid')
    if 'ix_misp__attribute__instance__uuid_instance_id' in misp_attr_indexes:
        op.drop_index('ix_misp__attribute__instance__uuid_instance_id', table_name='misp__attribute__instance__uuid')
    if 'ix_misp__attribute__instance__uuid_attribute_instance_uuid' in misp_attr_indexes:
        op.drop_index('ix_misp__attribute__instance__uuid_attribute_instance_uuid', table_name='misp__attribute__instance__uuid')

    # Revert case__misp__object column
    case_misp_object_columns = [col for col in inspector.get_columns('case__misp__object')]
    for col in case_misp_object_columns:
        if col['name'] == 'case_id' and col['nullable']:
            op.alter_column('case__misp__object', 'case_id',
               existing_type=sa.INTEGER(),
               nullable=False)
            break

    # Re-create case index
    case_indexes = [idx['name'] for idx in inspector.get_indexes('case')]
    if 'ix_case_title' not in case_indexes:
        op.create_index('ix_case_title', 'case', ['title'], unique=False)

    # ### end Alembic commands ###
