"""empty message

Revision ID: cff3c5e46550
Revises: a878d2c91115
Create Date: 2023-11-03 11:24:30.309808

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = 'cff3c5e46550'
down_revision = 'a878d2c91115'
branch_labels = None
depends_on = None

naming_convention = {
    "ix": 'ix_%(column_0_label)s',
    "uq": "uq_%(table_name)s_%(column_0_name)s",
    "ck": "ck_%(table_name)s_%(column_0_name)s",
    "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
    "pk": "pk_%(table_name)s"
}


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table and column exist before creating
    bind = op.get_bind()
    inspector = inspect(bind)
    existing_tables = inspector.get_table_names()
    
    # Create taxonomy table if it doesn't exist
    if 'taxonomy' not in existing_tables:
        op.create_table('taxonomy',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
    
    # Add taxonomy_id column to tags table if it doesn't exist
    tags_columns = [col['name'] for col in inspector.get_columns('tags')]
    if 'taxonomy_id' not in tags_columns:
        op.add_column('tags', sa.Column('taxonomy_id', sa.Integer(), nullable=True))
        op.create_foreign_key('fk_tags_taxonomy_id_taxonomy', 'tags', 'taxonomy', ['taxonomy_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tags', schema=None, naming_convention=naming_convention) as batch_op:
        batch_op.drop_constraint('fk_tags_taxonomy_id_taxonomy', type_='foreignkey')
        batch_op.drop_column('taxonomy_id')

    op.drop_table('taxonomy')
    # ### end Alembic commands ###
