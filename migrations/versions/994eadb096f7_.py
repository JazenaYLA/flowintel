"""empty message

Revision ID: 994eadb096f7
Revises: 24bb42802255
Create Date: 2025-04-07 16:24:13.609954

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = '994eadb096f7'
down_revision = '24bb42802255'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        with op.batch_alter_table('subtask', schema=None) as batch_op:
            batch_op.add_column(sa.Column('task_order_id', sa.Integer(), nullable=True))
            batch_op.create_index(batch_op.f('ix_subtask_task_order_id'), ['task_order_id'], unique=False)
    except OperationalError:
        print("Column 'task_order_id' already exist in 'subtask'")

    connection = op.get_bind()

    tasks = connection.execute(sa.text("SELECT id FROM 'task'")).fetchall()

    for task in tasks:
        subtasks = connection.execute(sa.text(f"SELECT id FROM subtask WHERE subtask.task_id={task.id}")).fetchall()
        cp = 1
        for subtask in subtasks:
            connection.execute(
				sa.text(f"UPDATE subtask SET task_order_id = {cp} WHERE id = {subtask.id}")
            )
            cp += 1


    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        with op.batch_alter_table('subtask', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_subtask_task_order_id'))
            batch_op.drop_column('task_order_id')
    except OperationalError:
        print("Column 'task_order_id' already dropped from 'subtask'")

    # ### end Alembic commands ###
