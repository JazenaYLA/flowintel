"""empty message

Revision ID: 994eadb096f7
Revises: 24bb42802255
Create Date: 2025-04-07 16:24:13.609954

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = '994eadb096f7'
down_revision = '24bb42802255'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = inspect(bind)
    existing_columns = [col['name'] for col in inspector.get_columns('subtask')]
    
    if 'task_order_id' not in existing_columns:
        op.add_column('subtask', sa.Column('task_order_id', sa.Integer(), nullable=True))
        op.create_index('ix_subtask_task_order_id', 'subtask', ['task_order_id'], unique=False)

    connection = op.get_bind()

    tasks = connection.execute(sa.text("SELECT id FROM task")).fetchall()

    for task in tasks:
        subtasks = connection.execute(sa.text(f"SELECT id FROM subtask WHERE subtask.task_id={task.id}")).fetchall()
        cp = 1
        for subtask in subtasks:
            connection.execute(
				sa.text(f"UPDATE subtask SET task_order_id = {cp} WHERE id = {subtask.id}")
            )
            cp += 1


    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = inspect(bind)
    
    subtask_columns = [col['name'] for col in inspector.get_columns('subtask')]
    subtask_indexes = [idx['name'] for idx in inspector.get_indexes('subtask')]
    
    if 'ix_subtask_task_order_id' in subtask_indexes:
        op.drop_index('ix_subtask_task_order_id', table_name='subtask')
    if 'task_order_id' in subtask_columns:
        op.drop_column('subtask', 'task_order_id')

    # ### end Alembic commands ###
