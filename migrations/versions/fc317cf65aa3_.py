"""empty message

Revision ID: fc317cf65aa3
Revises: a34c4a11486b
Create Date: 2025-03-20 14:27:03.901381

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = 'fc317cf65aa3'
down_revision = 'a34c4a11486b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = inspect(bind)
    existing_tables = inspector.get_table_names()
    
    if 'task__template__url__tool' not in existing_tables:
        op.create_table('task__template__url__tool',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('task_id', sa.Integer(), nullable=True),
            sa.Column('name', sa.String(), nullable=True),
            sa.ForeignKeyConstraint(['task_id'], ['task__template.id'], ondelete='CASCADE'),
            sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_task__template__url__tool_name', 'task__template__url__tool', ['name'], unique=False)


    connection = op.get_bind()
    insp = sa.inspect(connection)
    columns = insp.get_columns('task')
    flag = any(c["name"] == 'url' for c in columns)

    tasks = connection.execute(sa.text("SELECT * FROM task__template")).fetchall()
    for task_ in tasks:
        if not flag:
            loc_url = sa.null()
        else:
            if task_.url == None or not task_.url:
                loc_url = sa.null()
            else:
                loc_url = task_.url
        connection.execute(
            sa.text(f"Insert into task__template__url__tool (task_id, name) values({task_.id},'{loc_url}')")
        )

    # Drop url column from task__template if it exists
    task_template_columns = [col['name'] for col in inspector.get_columns('task__template')]
    if 'url' in task_template_columns:
        try:
            op.drop_index('ix_task__template_url', 'task__template')
        except:
            pass
        op.drop_column('task__template', 'url')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = inspect(bind)
    
    task_template_columns = [col['name'] for col in inspector.get_columns('task__template')]
    existing_tables = inspector.get_table_names()
    
    # Add url column back to task__template if it doesn't exist
    if 'url' not in task_template_columns:
        op.add_column('task__template', sa.Column('url', sa.VARCHAR(), nullable=True))
        op.create_index('ix_task__template_url', 'task__template', ['url'], unique=False)

    # Migrate data back from task__template__url__tool
    if 'task__template__url__tool' in existing_tables:
        connection = op.get_bind()
        tasks_url_tool = connection.execute(sa.text("SELECT * FROM task__template__url__tool")).fetchall()
        for task_ in tasks_url_tool:
            if task_.name == None or not task_.name:
                loc_url = "NULL"
            else:
                loc_url = task_.name
            connection.execute(
                sa.text(f"UPDATE task__template SET url='{loc_url}' WHERE id={task_.task_id}")
            )

        # Drop task__template__url__tool table
        task_template_url_tool_indexes = [idx['name'] for idx in inspector.get_indexes('task__template__url__tool')]
        if 'ix_task__template__url__tool_name' in task_template_url_tool_indexes:
            op.drop_index('ix_task__template__url__tool_name', table_name='task__template__url__tool')
        op.drop_table('task__template__url__tool')

    # ### end Alembic commands ###
