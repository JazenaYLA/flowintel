"""empty message

Revision ID: fc317cf65aa3
Revises: a34c4a11486b
Create Date: 2025-03-20 14:27:03.901381

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = 'fc317cf65aa3'
down_revision = 'a34c4a11486b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        op.create_table('task__template__url__tool',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('task_id', sa.Integer(), nullable=True),
            sa.Column('name', sa.String(), nullable=True),
            sa.ForeignKeyConstraint(['task_id'], ['task__template.id'], ondelete='CASCADE'),
            sa.PrimaryKeyConstraint('id')
        )
    except OperationalError:
        print("Table 'task__template__url__tool' already exist")

    try:
        with op.batch_alter_table('task__template__url__tool', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_task__template__url__tool_name'), ['name'], unique=False)
    except OperationalError:
        print("Index 'ix_task__template__url__tool_name' already exist")


    connection = op.get_bind()
    insp = sa.inspect(connection)
    columns = insp.get_columns('task')
    flag = any(c["name"] == 'url' for c in columns)

    tasks = connection.execute(sa.text("SELECT * FROM 'task__template'")).fetchall()
    for task_ in tasks:
        if not flag:
            loc_url = sa.null()
        else:
            if task_.url == None or not task_.url:
                loc_url = sa.null()
            else:
                loc_url = task_.url
        connection.execute(
            sa.text(f"Insert into task__template__url__tool (task_id, name) values({task_.id},'{loc_url}')")
        )

    try:
        with op.batch_alter_table('task__template', schema=None) as batch_op:
            batch_op.drop_index('ix_task__template_url')
            batch_op.drop_column('url')
    except OperationalError:
        print("column 'url' already dropped from Task__Template")
    except ValueError:
        print("Index 'ix_task__template_url' already dropped from Task")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        with op.batch_alter_table('task__template', schema=None) as batch_op:
            batch_op.add_column(sa.Column('url', sa.VARCHAR(), nullable=True))
            batch_op.create_index('ix_task__template_url', ['url'], unique=False)
    except OperationalError:
        print("column 'url' already created for Task Template")

    connection = op.get_bind()

    tasks_url_tool = connection.execute(sa.text("SELECT * FROM 'task__template__url__tool'")).fetchall()
    for task_ in tasks_url_tool:
        if task_.name == None or not task_.name:
            loc_url = sa.null()
        else:
            loc_url = task_.name
        connection.execute(
            sa.text(f"Insert into task__template (url) values('{loc_url}')")
        )

    try:
        with op.batch_alter_table('task__template__url__tool', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_task__template__url__tool_name'))
    except OperationalError:
        print("index 'ix_task__template__url__tool_name' already dropped")

    try:
        op.drop_table('task__template__url__tool')
    except OperationalError:
        print("Table 'task__template__url__tool' already dropped")
    # ### end Alembic commands ###
