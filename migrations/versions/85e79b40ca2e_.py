"""empty message

Revision ID: 85e79b40ca2e
Revises: 74b67b392f32
Create Date: 2023-11-17 15:31:15.260394

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = '85e79b40ca2e'
down_revision = '74b67b392f32'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check existing structure before making changes
    bind = op.get_bind()
    inspector = inspect(bind)
    
    # Helper function to replace tag_id with cluster_id for a table
    def replace_tag_with_cluster(table_name):
        existing_columns = [col['name'] for col in inspector.get_columns(table_name)]
        existing_indexes = [idx['name'] for idx in inspector.get_indexes(table_name)]
        
        # Drop tag_id column if it exists
        if 'tag_id' in existing_columns:
            # Drop index first if it exists
            tag_index_name = f'ix_{table_name}_tag_id'
            if tag_index_name in existing_indexes:
                try:
                    op.drop_index(tag_index_name, table_name)
                except:
                    pass
            op.drop_column(table_name, 'tag_id')
        
        # Add cluster_id column if it doesn't exist
        if 'cluster_id' not in existing_columns:
            op.add_column(table_name, sa.Column('cluster_id', sa.Integer(), nullable=True))
            op.create_index(f'ix_{table_name}_cluster_id', table_name, ['cluster_id'], unique=False)
    
    # Apply changes to all galaxy tag tables
    tables_to_update = [
        'case__galaxy__tags',
        'case__template__galaxy__tags', 
        'task__galaxy__tags',
        'task__template__galaxy__tags'
    ]
    
    for table_name in tables_to_update:
        try:
            replace_tag_with_cluster(table_name)
        except Exception as e:
            print(f"Error updating {table_name}: {e}")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('task__template__galaxy__tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tag_id', sa.INTEGER(), nullable=True))
        batch_op.drop_index(batch_op.f('ix_task__template__galaxy__tags_cluster_id'))
        batch_op.create_index('ix_task__template__galaxy__tags_tag_id', ['tag_id'], unique=False)
        batch_op.drop_column('cluster_id')

    with op.batch_alter_table('task__galaxy__tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tag_id', sa.INTEGER(), nullable=True))
        batch_op.drop_index(batch_op.f('ix_task__galaxy__tags_cluster_id'))
        batch_op.create_index('ix_task__galaxy__tags_tag_id', ['tag_id'], unique=False)
        batch_op.drop_column('cluster_id')

    with op.batch_alter_table('case__template__galaxy__tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tag_id', sa.INTEGER(), nullable=True))
        batch_op.drop_index(batch_op.f('ix_case__template__galaxy__tags_cluster_id'))
        batch_op.create_index('ix_case__template__galaxy__tags_tag_id', ['tag_id'], unique=False)
        batch_op.drop_column('cluster_id')

    with op.batch_alter_table('case__galaxy__tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tag_id', sa.INTEGER(), nullable=True))
        batch_op.drop_index(batch_op.f('ix_case__galaxy__tags_cluster_id'))
        batch_op.create_index('ix_case__galaxy__tags_tag_id', ['tag_id'], unique=False)
        batch_op.drop_column('cluster_id')

    # ### end Alembic commands ###
