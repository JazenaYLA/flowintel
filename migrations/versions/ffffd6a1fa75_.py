"""empty message

Revision ID: ffffd6a1fa75
Revises: decb78ddf061
Create Date: 2023-11-16 09:34:08.347836

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = 'ffffd6a1fa75'
down_revision = 'decb78ddf061'
branch_labels = None
depends_on = None

naming_convention = {
    "ix": 'ix_%(column_0_label)s',
    "uq": "uq_%(table_name)s_%(column_0_name)s",
    "ck": "ck_%(table_name)s_%(column_0_name)s",
    "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
    "pk": "pk_%(table_name)s"
}


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check which tables exist before creating
    bind = op.get_bind()
    inspector = inspect(bind)
    existing_tables = inspector.get_table_names()
    
    # Create case__galaxy__tags table
    if 'case__galaxy__tags' not in existing_tables:
        op.create_table('case__galaxy__tags',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=True),
        sa.Column('case_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_case__galaxy__tags_case_id', 'case__galaxy__tags', ['case_id'], unique=False)
        op.create_index('ix_case__galaxy__tags_tag_id', 'case__galaxy__tags', ['tag_id'], unique=False)

    # Create case__template__galaxy__tags table
    if 'case__template__galaxy__tags' not in existing_tables:
        op.create_table('case__template__galaxy__tags',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=True),
        sa.Column('template_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_case__template__galaxy__tags_tag_id', 'case__template__galaxy__tags', ['tag_id'], unique=False)
        op.create_index('ix_case__template__galaxy__tags_template_id', 'case__template__galaxy__tags', ['template_id'], unique=False)

    # Create galaxy table
    if 'galaxy' not in existing_tables:
        op.create_table('galaxy',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('uuid', sa.String(length=36), nullable=True),
        sa.Column('version', sa.Integer(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('icon', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_galaxy_uuid', 'galaxy', ['uuid'], unique=False)
        op.create_index('ix_galaxy_version', 'galaxy', ['version'], unique=False)

    # Create task__galaxy__tags table
    if 'task__galaxy__tags' not in existing_tables:
        op.create_table('task__galaxy__tags',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=True),
        sa.Column('task_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_task__galaxy__tags_tag_id', 'task__galaxy__tags', ['tag_id'], unique=False)
        op.create_index('ix_task__galaxy__tags_task_id', 'task__galaxy__tags', ['task_id'], unique=False)

    # Create task__template__galaxy__tags table
    if 'task__template__galaxy__tags' not in existing_tables:
        op.create_table('task__template__galaxy__tags',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=True),
        sa.Column('template_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_task__template__galaxy__tags_tag_id', 'task__template__galaxy__tags', ['tag_id'], unique=False)
        op.create_index('ix_task__template__galaxy__tags_template_id', 'task__template__galaxy__tags', ['template_id'], unique=False)

    # Create cluster table (depends on galaxy)
    if 'cluster' not in existing_tables:
        op.create_table('cluster',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('uuid', sa.String(length=36), nullable=True),
        sa.Column('version', sa.Integer(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('meta', sa.String(), nullable=True),
        sa.Column('galaxy_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['galaxy_id'], ['galaxy.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_cluster_uuid', 'cluster', ['uuid'], unique=False)
        op.create_index('ix_cluster_version', 'cluster', ['version'], unique=False)

    # Add cluster_id column to tags table
    tags_columns = [col['name'] for col in inspector.get_columns('tags')]
    if 'cluster_id' not in tags_columns:
        op.add_column('tags', sa.Column('cluster_id', sa.Integer(), nullable=True))
        op.create_foreign_key('fk_tags_cluster_id_cluster', 'tags', 'cluster', ['cluster_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tags_cluster_id_cluster', type_='foreignkey')
        batch_op.drop_column('cluster_id')

    with op.batch_alter_table('cluster', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cluster_version'))
        batch_op.drop_index(batch_op.f('ix_cluster_uuid'))

    op.drop_table('cluster')
    with op.batch_alter_table('task__template__galaxy__tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task__template__galaxy__tags_template_id'))
        batch_op.drop_index(batch_op.f('ix_task__template__galaxy__tags_tag_id'))

    op.drop_table('task__template__galaxy__tags')
    with op.batch_alter_table('task__galaxy__tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task__galaxy__tags_task_id'))
        batch_op.drop_index(batch_op.f('ix_task__galaxy__tags_tag_id'))

    op.drop_table('task__galaxy__tags')
    with op.batch_alter_table('galaxy', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_galaxy_version'))
        batch_op.drop_index(batch_op.f('ix_galaxy_uuid'))

    op.drop_table('galaxy')
    with op.batch_alter_table('case__template__galaxy__tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_case__template__galaxy__tags_template_id'))
        batch_op.drop_index(batch_op.f('ix_case__template__galaxy__tags_tag_id'))

    op.drop_table('case__template__galaxy__tags')
    with op.batch_alter_table('case__galaxy__tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_case__galaxy__tags_tag_id'))
        batch_op.drop_index(batch_op.f('ix_case__galaxy__tags_case_id'))

    op.drop_table('case__galaxy__tags')
    # ### end Alembic commands ###
