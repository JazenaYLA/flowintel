"""empty message

Revision ID: 5cd03995339b
Revises: b8d53a427749
Create Date: 2024-04-24 10:28:32.663416

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = '5cd03995339b'
down_revision = 'b8d53a427749'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    inspector = inspect(connection)
    existing_tables = inspector.get_table_names()

    if 'case__connector__id' in existing_tables:
        case_connector_id = connection.execute(sa.text("SELECT case_id, instance_id, identifier FROM case__connector__id")).fetchall()

        for cci in case_connector_id:
            case_connector = connection.execute(sa.text(f"SELECT id FROM case__connector__instance WHERE case__connector__instance.case_id={cci.case_id} and case__connector__instance.instance_id={cci.instance_id}")).fetchall()
            for c_c in case_connector:
                if cci.identifier:
                    ident = cci.identifier
                else:
                    ident = "null"
                connection.execute(
                    sa.text(f"UPDATE case__connector__instance SET identifier = {ident} WHERE id = {c_c.id}")
                )

    if 'task__connector__id' in existing_tables:
        task_connector_id = connection.execute(sa.text("SELECT task_id, instance_id, identifier FROM task__connector__id")).fetchall()

        for tci in task_connector_id:
            task_connector = connection.execute(sa.text(f"SELECT id FROM task__connector__instance WHERE task__connector__instance.task_id={tci.task_id} and task__connector__instance.instance_id={tci.instance_id}")).fetchall()
            for t_c in task_connector:
                if tci.identifier:
                    ident = tci.identifier
                else:
                    ident = "null"
                connection.execute(
                    sa.text(f"UPDATE task__connector__instance SET identifier = {ident} WHERE id = {t_c.id}")
                )

    if 'case__connector__id' in existing_tables:
        existing_indexes = [idx['name'] for idx in inspector.get_indexes('case__connector__id')]
        if 'ix_case__connector__id_case_id' in existing_indexes:
            op.drop_index('ix_case__connector__id_case_id', table_name='case__connector__id')
        if 'ix_case__connector__id_instance_id' in existing_indexes:
            op.drop_index('ix_case__connector__id_instance_id', table_name='case__connector__id')
        op.drop_table('case__connector__id')

    if 'task__connector__id' in existing_tables:
        existing_indexes = [idx['name'] for idx in inspector.get_indexes('task__connector__id')]
        if 'ix_task__connector__id_instance_id' in existing_indexes:
            op.drop_index('ix_task__connector__id_instance_id', table_name='task__connector__id')
        if 'ix_task__connector__id_task_id' in existing_indexes:
            op.drop_index('ix_task__connector__id_task_id', table_name='task__connector__id')
        op.drop_table('task__connector__id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task__connector__id',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('task_id', sa.INTEGER(), nullable=True),
    sa.Column('instance_id', sa.INTEGER(), nullable=True),
    sa.Column('identifier', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('task__connector__id', schema=None) as batch_op:
        batch_op.create_index('ix_task__connector__id_task_id', ['task_id'], unique=False)
        batch_op.create_index('ix_task__connector__id_instance_id', ['instance_id'], unique=False)

    op.create_table('case__connector__id',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('case_id', sa.INTEGER(), nullable=True),
    sa.Column('instance_id', sa.INTEGER(), nullable=True),
    sa.Column('identifier', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('case__connector__id', schema=None) as batch_op:
        batch_op.create_index('ix_case__connector__id_instance_id', ['instance_id'], unique=False)
        batch_op.create_index('ix_case__connector__id_case_id', ['case_id'], unique=False)

    # ### end Alembic commands ###
