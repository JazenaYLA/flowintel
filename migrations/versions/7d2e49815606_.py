"""empty message

Revision ID: 7d2e49815606
Revises: 622a2ad64973
Create Date: 2025-05-07 14:10:09.487160

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = '7d2e49815606'
down_revision = '622a2ad64973'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        op.create_table('case__note__template__model',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('case_id', sa.Integer(), nullable=True),
        sa.Column('note_template_id', sa.Integer(), nullable=True),
        sa.Column('values', sa.JSON(), nullable=True),
        sa.Column('template_version', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        with op.batch_alter_table('case__note__template__model', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_case__note__template__model_case_id'), ['case_id'], unique=False)
            batch_op.create_index(batch_op.f('ix_case__note__template__model_note_template_id'), ['note_template_id'], unique=False)
            batch_op.create_index(batch_op.f('ix_case__note__template__model_template_version'), ['template_version'], unique=False)
    except OperationalError:
        print("Table 'case_note_template_model' already exist")

    try:
        op.create_table('note__template__model',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('uuid', sa.String(length=36), nullable=True),
            sa.Column('author', sa.Integer(), nullable=True),
            sa.Column('title', sa.String(), nullable=True),
            sa.Column('description', sa.String(), nullable=True),
            sa.Column('content', sa.String(), nullable=True),
            sa.Column('params', sa.JSON(), nullable=True),
            sa.Column('creation_date', sa.DateTime(), nullable=True),
            sa.Column('last_modif', sa.DateTime(), nullable=True),
            sa.Column('version', sa.Integer(), nullable=True),
            sa.PrimaryKeyConstraint('id')
        )
        with op.batch_alter_table('note__template__model', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_note__template__model_author'), ['author'], unique=False)
            batch_op.create_index(batch_op.f('ix_note__template__model_creation_date'), ['creation_date'], unique=False)
            batch_op.create_index(batch_op.f('ix_note__template__model_last_modif'), ['last_modif'], unique=False)
            batch_op.create_index(batch_op.f('ix_note__template__model_uuid'), ['uuid'], unique=False)
            batch_op.create_index(batch_op.f('ix_note__template__model_version'), ['version'], unique=False)
    except OperationalError:
        print("Table 'note_template_model' already exist")


    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        with op.batch_alter_table('note__template__model', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_note__template__model_version'))
            batch_op.drop_index(batch_op.f('ix_note__template__model_uuid'))
            batch_op.drop_index(batch_op.f('ix_note__template__model_last_modif'))
            batch_op.drop_index(batch_op.f('ix_note__template__model_creation_date'))
            batch_op.drop_index(batch_op.f('ix_note__template__model_author'))

        op.drop_table('note__template__model')
    except OperationalError:
        print("Table 'note_template_model' already dropped")

    try:
        with op.batch_alter_table('case__note__template__model', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_case__note__template__model_template_version'))
            batch_op.drop_index(batch_op.f('ix_case__note__template__model_note_template_id'))
            batch_op.drop_index(batch_op.f('ix_case__note__template__model_case_id'))

        op.drop_table('case__note__template__model')
    except OperationalError:
        print("Table 'case_note_template_model' already exist")

    # ### end Alembic commands ###
