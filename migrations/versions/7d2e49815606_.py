"""empty message

Revision ID: 7d2e49815606
Revises: 622a2ad64973
Create Date: 2025-05-07 14:10:09.487160

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect
from sqlalchemy.exc import OperationalError


# revision identifiers, used by Alembic.
revision = '7d2e49815606'
down_revision = '622a2ad64973'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = inspect(bind)
    existing_tables = inspector.get_table_names()
    
    # Create case__note__template__model table
    if 'case__note__template__model' not in existing_tables:
        op.create_table('case__note__template__model',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('case_id', sa.Integer(), nullable=True),
        sa.Column('note_template_id', sa.Integer(), nullable=True),
        sa.Column('values', sa.JSON(), nullable=True),
        sa.Column('template_version', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_case__note__template__model_case_id', 'case__note__template__model', ['case_id'], unique=False)
        op.create_index('ix_case__note__template__model_note_template_id', 'case__note__template__model', ['note_template_id'], unique=False)
        op.create_index('ix_case__note__template__model_template_version', 'case__note__template__model', ['template_version'], unique=False)

    # Create note__template__model table
    if 'note__template__model' not in existing_tables:
        op.create_table('note__template__model',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('uuid', sa.String(length=36), nullable=True),
            sa.Column('author', sa.Integer(), nullable=True),
            sa.Column('title', sa.String(), nullable=True),
            sa.Column('description', sa.String(), nullable=True),
            sa.Column('content', sa.String(), nullable=True),
            sa.Column('params', sa.JSON(), nullable=True),
            sa.Column('creation_date', sa.DateTime(), nullable=True),
            sa.Column('last_modif', sa.DateTime(), nullable=True),
            sa.Column('version', sa.Integer(), nullable=True),
            sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_note__template__model_author', 'note__template__model', ['author'], unique=False)
        op.create_index('ix_note__template__model_creation_date', 'note__template__model', ['creation_date'], unique=False)
        op.create_index('ix_note__template__model_last_modif', 'note__template__model', ['last_modif'], unique=False)
        op.create_index('ix_note__template__model_uuid', 'note__template__model', ['uuid'], unique=False)
        op.create_index('ix_note__template__model_version', 'note__template__model', ['version'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = inspect(bind)
    existing_tables = inspector.get_table_names()

    # Drop note__template__model table
    if 'note__template__model' in existing_tables:
        note_template_indexes = [idx['name'] for idx in inspector.get_indexes('note__template__model')]
        if 'ix_note__template__model_version' in note_template_indexes:
            op.drop_index('ix_note__template__model_version', table_name='note__template__model')
        if 'ix_note__template__model_uuid' in note_template_indexes:
            op.drop_index('ix_note__template__model_uuid', table_name='note__template__model')
        if 'ix_note__template__model_last_modif' in note_template_indexes:
            op.drop_index('ix_note__template__model_last_modif', table_name='note__template__model')
        if 'ix_note__template__model_creation_date' in note_template_indexes:
            op.drop_index('ix_note__template__model_creation_date', table_name='note__template__model')
        if 'ix_note__template__model_author' in note_template_indexes:
            op.drop_index('ix_note__template__model_author', table_name='note__template__model')
        op.drop_table('note__template__model')

    # Drop case__note__template__model table
    if 'case__note__template__model' in existing_tables:
        case_note_template_indexes = [idx['name'] for idx in inspector.get_indexes('case__note__template__model')]
        if 'ix_case__note__template__model_template_version' in case_note_template_indexes:
            op.drop_index('ix_case__note__template__model_template_version', table_name='case__note__template__model')
        if 'ix_case__note__template__model_note_template_id' in case_note_template_indexes:
            op.drop_index('ix_case__note__template__model_note_template_id', table_name='case__note__template__model')
        if 'ix_case__note__template__model_case_id' in case_note_template_indexes:
            op.drop_index('ix_case__note__template__model_case_id', table_name='case__note__template__model')
        op.drop_table('case__note__template__model')

    # ### end Alembic commands ###
