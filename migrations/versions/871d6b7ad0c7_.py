"""empty message

Revision ID: 871d6b7ad0c7
Revises: 5cd03995339b
Create Date: 2024-04-24 16:09:26.037707

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = '871d6b7ad0c7'
down_revision = '5cd03995339b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check what exists before making changes
    bind = op.get_bind()
    inspector = inspect(bind)
    existing_tables = inspector.get_table_names()
    
    # Create note__template table
    if 'note__template' not in existing_tables:
        op.create_table('note__template',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('uuid', sa.String(length=36), nullable=True),
        sa.Column('note', sa.String(), nullable=True),
        sa.Column('template_id', sa.Integer(), nullable=True),
        sa.Column('template_order_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['template_id'], ['task__template.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index('ix_note__template_template_order_id', 'note__template', ['template_order_id'], unique=False)
        op.create_index('ix_note__template_uuid', 'note__template', ['uuid'], unique=False)

    # Check task__template columns
    task_template_columns = [col['name'] for col in inspector.get_columns('task__template')]
    
    # Add nb_notes column
    if 'nb_notes' not in task_template_columns:
        op.add_column('task__template', sa.Column('nb_notes', sa.Integer(), nullable=True))
        op.create_index('ix_task__template_nb_notes', 'task__template', ['nb_notes'], unique=False)

    # Drop notes column if it exists
    if 'notes' in task_template_columns:
        op.drop_column('task__template', 'notes')

    # Update nb_notes to 0
    connection = op.get_bind()
    connection.execute(sa.text("UPDATE task__template SET nb_notes = 0"))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('task__template', schema=None) as batch_op:
        batch_op.add_column(sa.Column('notes', sa.VARCHAR(), nullable=True))
        batch_op.drop_index(batch_op.f('ix_task__template_nb_notes'))
        batch_op.drop_column('nb_notes')

    with op.batch_alter_table('note__template', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_note__template_uuid'))
        batch_op.drop_index(batch_op.f('ix_note__template_template_order_id'))

    op.drop_table('note__template')
    # ### end Alembic commands ###
